name: Documentation

on:
  push:
    branches:
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: '3.7'
        cache: 'pip'
        - run: pip install -r docs/requirements.txt
    # Standard drop-in approach that should work for most people.
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs/"
    # Great extra actions to compose with:
    # Create an artifact of the html output.
    - uses: actions/upload-artifact@v1
      with:
        name: DocumentationHTML
        path: docs/_build/html/
    # Create an artifact out of the previously built pdf.
    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: Documentation
    #     path: docs2/_build/latex/pdfexample.pdf
    # Publish built docs to gh-pages branch.
    # ===============================
    - name: Commit documentation changes
      run: |
        git clone https://github.com/ammaraskar/sphinx-action-test.git --branch gh-pages --single-branch gh-pages
        cp -r docs/_build/html/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation [ci skip]" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.
    - name: Deploy ðŸš€
      uses: JamesIves/github-pages-deploy-action@v4.3.3
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: gh-pages # The folder the action should deploy.
