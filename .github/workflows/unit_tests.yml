name: Unit tests

on:
  pull_request:
  push:

jobs:

  test:
    name: Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ 3.6, 3.7, 3.8, 3.9, "3.10" ]
        os:  [ macos-latest, ubuntu-20.04, ubuntu-22.04]
        exclude:
          - os: ubuntu-22.04
            python: 3.6
          - os: ubuntu-22.04
            python: 3.7
          - os: ubuntu-22.04
            python: 3.8
          - os: ubuntu-22.04
            python: 3.9

    defaults:
      run:
        shell: bash

    steps:

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Linux packages for Qt5 support
        if: matrix.os == 'ubuntu-20.04'
        run: |
            sudo apt-get update
            sudo apt-get install qt5-default
            sudo apt-get install libxkbcommon-x11-0
            sudo apt-get install libxcb-icccm4
            sudo apt-get install libxcb-image0
            sudo apt-get install libxcb-keysyms1
            sudo apt-get install libxcb-randr0
            sudo apt-get install libxcb-render-util0
            sudo apt-get install libxcb-xinerama0

      - name: Install dependencies and local packages
        if: matrix.os == 'ubuntu-20.04'
        run: |
            python -m pip install pyqt5
            python -m pip install numpy
            python -m pip install vtk
            python -m pip install pillow

      - name: Until Kitware releases official VTK wheels for Python 3.10
        # 1) avoids Could not load the Qt platform plugin "xcb" in "" even though it was found.
        # 2) See https://github.com/enthought/mayavi/issues/1156
        if: matrix.os == 'ubuntu-22.04'
        run: |
              sudo apt install libxcb-xinerama0
              pip install https://github.com/pyvista/pyvista-wheels/raw/main/vtk-9.1.0.dev0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl

      - name: Install pip deps
        run: python -m pip install -r requirements.txt

      - name: Run tests
        working-directory: .
        run: |
            pip3 install pytest-cov
            python3 -m pytest --cov=crumbs --cov-report=xml --cov-branch tests

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v2
        with:
          working-directory: crumbs
          fail_ci_if_error: true
          flags: tests
          name: codecov-umbrella
          verbose: true
