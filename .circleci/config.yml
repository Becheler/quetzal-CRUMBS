version: 2.1

executors:
  executor-eggs:
    docker:
      - image: arnaudbecheler/quetzal-eggs:latest
  executor-crumbs:
    docker:
      - image: arnaudbecheler/quetzal-crumbs:latest

jobs:

  build-test-install-EGGS: # we will use EGGS simulations to test database API
    executor: executor-eggs
    steps:
      - checkout
      - run:
          name: Setup quetzal-EGGS repo
          command: |
            git clone --recurse-submodules https://github.com/Becheler/quetzal-EGGS
            cd quetzal-EGGS
            mkdir build
            cd build
            cmake -DCMAKE_INSTALL_PREFIX=/root/project/EGGS ..
            cmake --build .
            ctest
            cmake --install .
      - persist_to_workspace:
          root: .
          paths:
            - EGGS

  generate-EGGS-output: # generate output database that can be used to test CRUMBS API
    executor: executor-eggs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run simulation
          command: |
            cd EGGS
            ./EGG1 quetzal_EGG1.config suitability_408_cells.tif sample.csv out.db --duration=200 --K_suit=500 --emigrant_rate=0.5
      - persist_to_workspace:
          root: .
          paths:
            - EGGS

  build-test-CRUMBS:
    executor: executor-crumbs
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Copy simulated database to package test data
          command: cp EGGS/out.db tests/data/
      - run:
          name: Create a source distribution and a shareable wheel
          command: |
            python3 -m build
            pip3 install dist/quetzal_crumbs-0.0.6-py3-none-any.whl
      - run:
          name: Run tests
          command: python3 tests/test.py

  test_pypi_publish:
    executor: executor-crumbs
    steps:
      - checkout
      - run:
          command: |  # create whl, install twine and publish to Test PyPI
            #pip3 install build twine
            python3 -m build
            python3 -m twine upload -u $TESTPYPI_USERNAME -p $TESTPYPI_PASSWORD --repository testpypi dist/*
  pypi_publish:
    executor: executor-crumbs
    steps:
      - checkout
      - run:
          command: |  # create whl, install twine and publish to PyPI
            #pip3 install build twine
            python3 -m build
            python3 -m twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*
workflows:
  version: 2
  CRUMBS-integration:
    jobs:
      - build-test-install-EGGS
      - generate-EGGS-output:
          requires:
              - build-test-install-EGGS
      - build-test-CRUMBS:
          requires:
            - generate-EGGS-output
      - test_pypi_publish:
          requires:
            - build-test-CRUMBS
          filters:
            branches:
              only:
                - develop
      - pypi_publish:
          requires:
            - build-test-CRUMBS
          filters:
            branches:
              only:
                - main
