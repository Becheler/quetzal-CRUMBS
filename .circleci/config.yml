version: 2.1

executors:
  exectr:
    docker:
      - image: arnaudbecheler/quetzal-eggs:latest

orbs:
  python: circleci/python@1.2

jobs:

  build-test-install-EGGS: # we will use EGGS simulations to test database API
    executor: exectr
    steps:
      - checkout
      - run:
          name: Setup quetzal-EGGS repo
          command: |
            git clone --recurse-submodules https://github.com/Becheler/quetzal-EGGS
            cd quetzal-EGGS
            mkdir build
            cd build
            cmake -DCMAKE_INSTALL_PREFIX=/root/project/EGGS ..
            cmake --build .
            ctest
            cmake --install .
      - persist_to_workspace:
          root: .
          paths:
            - EGGS

  generate-EGGS-output: # generate output database that can be used to test CRUMBS API
    executor: exectr
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run simulation
          command: |
            cd EGGS
            ./EGG1 quetzal_EGG1.config suitability.tif sample.csv out.db
      - persist_to_workspace:
          root: .
          paths:
            - EGGS

  build-test-CRUMBS:
    executor: python/default
    steps:
      - checkout
      - run: |
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt-get update
          sudo apt-get install gdal-bin
          ogrinfo --version
          sudo apt install libpq-dev
          sudo apt install libmysqlclient-dev
          sudo apt install default-libmysqlclient-dev
          sudo apt-get install libgdal-dev
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal
          pip install numpy
          pip install GDAL==3.2.1
      - attach_workspace:
          at: .
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: requirements.txt
      - run:
          name: Copy test data
          command: cp EGGS/out.db test_data/
      - run:
          name: Run tests
          command: python3 test.py

  build_test:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl and use pipenv to install dependencies
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install dist/quetzal-crumbs-0.0.1-py3-none-any.whl
            pipenv install pytest
      - run:
          command: |  # Run test suite
            pipenv run pytest

  test_pypi_publish:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl, install twine and publish to Test PyPI
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl, install twine and publish to PyPI
            python setup.py sdist bdist_wheel
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload dist/*

workflows:
  version: 2
  CRUMBS-integration:
    jobs:
      - build-test-install-EGGS
      - generate-EGGS-output:
          requires:
              - build-test-install-EGGS
      - build-test-CRUMBS:
          requires:
            - generate-EGGS-output
      - test_pypi_publish:
          requires:
            - build-test-CRUMBS
          filters:
            branches:
              only:
                - develop
      - pypi_publish:
          requires:
            - build-test-CRUMBS
          filters:
            branches:
              only:
                - main
